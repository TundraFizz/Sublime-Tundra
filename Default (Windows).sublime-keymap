[
    // Changing the current tab
    { "keys": ["ctrl+tab"], "command": "next_view" },
    { "keys": ["ctrl+shift+tab"], "command": "prev_view" },

    // Reset the font size
    { "keys": ["ctrl+0"], "command": "reset_font_size" },

    // Find text
    { "keys": ["f1"], "command": "find_next" },
    { "keys": ["shift+f1"], "command": "find_prev" },
    { "keys": ["ctrl+f1"], "command": "find_under" },
    { "keys": ["ctrl+shift+f1"], "command": "find_under_prev" },
    { "keys": ["alt+f1"], "command": "find_all_under" },

    // Jump to bookmarks
    { "keys": ["f2"], "command": "next_bookmark" },
    { "keys": ["shift+f2"], "command": "prev_bookmark" },
    { "keys": ["ctrl+f2"], "command": "toggle_bookmark" },
    { "keys": ["ctrl+shift+f2"], "command": "clear_bookmarks" },
    { "keys": ["alt+f2"], "command": "select_all_bookmarks" },

    // Show the scope name (useful for making custom color schemes)
    { "keys": ["f3"], "command": "show_scope_name" },

    // Sort selected lines alphabetically
    { "keys": ["f4"], "command": "sort_lines", "args": {"case_sensitive": false} },
    { "keys": ["ctrl+f4"], "command": "sort_lines", "args": {"reverse": true} },

    // Toggle the spellchecker
    { "keys": ["f5"], "command": "toggle_setting", "args": {"setting": "spell_check"} },
    { "keys": ["ctrl+f5"], "command": "next_misspelling" },
    { "keys": ["ctrl+shift+f5"], "command": "prev_misspelling" },

    // Shortcuts for projects
    { "keys": ["ctrl+shift+`"],   "command": "close_workspace" },
    { "keys": ["ctrl+\\"],        "command": "toggle_side_bar" },
    { "keys": ["ctrl+shift+\\"],  "command": "prompt_select_workspace" },

    // Grave ` key
    { "keys": ["`"], "command": "insert_snippet", "args": {"contents": "`$0`"}, "context":
        [
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|;|\\}|$)", "match_all": true }
        ]
    },
    { "keys": ["`"], "command": "insert_snippet", "args": {"contents": "`${0:$SELECTION}`"}, "context":
        [
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
        ]
    },
    { "keys": ["`"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
        [
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^`", "match_all": true }
        ]
    },
    { "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "Packages/Default/Delete Left Right.sublime-macro"}, "context":
        [
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "regex_contains", "operand": "`$", "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^`", "match_all": true }
        ]
    }
]
